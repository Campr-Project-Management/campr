services:
    app.repository.work_package:
        class: AppBundle\Repository\WorkPackageRepository
        arguments: ~
        tags:
            - { name: app.repository, class: AppBundle\Entity\WorkPackage }

    app.repository.work_package_status:
        class: AppBundle\Repository\WorkPackageStatusRepository
        arguments: ~
        tags:
            - { name: app.repository, class: AppBundle\Entity\WorkPackageStatus }

    app.repository.rasci:
        class: AppBundle\Repository\RasciRepository
        arguments: ~
        tags:
            - { name: app.repository, class: AppBundle\Entity\Rasci }

    app.repository.project_user:
        class: AppBundle\Repository\ProjectUserRepository
        arguments: ~
        tags:
            - { name: app.repository, class: AppBundle\Entity\ProjectUser }

    app.repository.user:
        class: AppBundle\Repository\UserRepository
        arguments: ~
        tags:
            - { name: app.repository, class: AppBundle\Entity\User }

    app.repository.team:
        class: AppBundle\Repository\TeamRepository
        arguments: ~
        tags:
            - { name: app.repository, class: AppBundle\Entity\Team }

    app.repository.currency:
        class: AppBundle\Repository\CurrencyRepository
        arguments: ~
        tags:
            - { name: app.repository, class: AppBundle\Entity\Currency }

    app.repository.risk:
        class: AppBundle\Repository\RiskRepository
        arguments: ~
        tags:
            - { name: app.repository, class: AppBundle\Entity\Risk }

    app.repository.opportunity:
        class: AppBundle\Repository\OpportunityRepository
        arguments: ~
        tags:
            - { name: app.repository, class: AppBundle\Entity\Opportunity }

    app.repository.measure:
        class: AppBundle\Repository\MeasureRepository
        arguments: ~
        tags:
            - { name: app.repository, class: AppBundle\Entity\Measure }

    app.repository.filesytem:
        class: AppBundle\Repository\FileSystemRepository
        arguments: ~
        tags:
            - { name: app.repository, class: AppBundle\Entity\FileSystem }

    app.repository.media:
        class: AppBundle\Repository\MediaRepository
        arguments: ~
        tags:
            - { name: app.repository, class: AppBundle\Entity\Media }

    app.repository.project:
        class: AppBundle\Repository\ProjectRepository
        arguments: ~
        tags:
            - { name: app.repository, class: AppBundle\Entity\Project }

    app.repository.cost:
        class: AppBundle\Repository\CostRepository
        arguments: ~
        tags:
            - { name: app.repository, class: AppBundle\Entity\Cost }

    app.repository.status_report:
        class: AppBundle\Repository\StatusReportRepository
        arguments: ~
        tags:
            - { name: app.repository, class: AppBundle\Entity\StatusReport }

    app.repository.info:
        class: AppBundle\Repository\InfoRepository
        arguments: ~
        tags:
            - { name: app.repository, class: AppBundle\Entity\Info }

    app.repository.todo:
        class: AppBundle\Repository\TodoRepository
        arguments: ~
        tags:
            - { name: app.repository, class: AppBundle\Entity\Todo }

    app.repository.decisions:
        class: AppBundle\Repository\DecisionRepository
        arguments: ~
        tags:
            - { name: app.repository, class: AppBundle\Entity\Decision }

    app.repository.infos:
        class: AppBundle\Repository\InfoRepository
        arguments: ~
        tags:
            - { name: app.repository, class: AppBundle\Entity\Info }

    app.repository.opportunity_status:
        class: AppBundle\Repository\OpportunityStatusRepository
        arguments: ~
        tags:
            - { name: app.repository, class: AppBundle\Entity\OpportunityStatus }

    app.repository.log:
        class: AppBundle\Repository\LogRepository
        arguments: ~
        tags:
            - { name: app.repository, class: AppBundle\Entity\Log }

    app.repository.distribution_list:
        class: AppBundle\Repository\DistributionListRepository
        arguments: ~
        tags:
            - { name: app.repository, class: AppBundle\Entity\DistributionList }

    app.repository.meeting:
        class: AppBundle\Repository\MeetingRepository
        arguments: ~
        tags:
            - { name: app.repository, class: AppBundle\Entity\Meeting }

    app.repository.team_invite:
        class: AppBundle\Repository\TeamInviteRepository
        arguments: ~
        tags:
            - { name: app.repository, class: AppBundle\Entity\TeamInvite }

    app.repository.meeting_report:
        class: AppBundle\Repository\MeetingReportRepository
        arguments: ~
        tags:
            - { name: app.repository, class: AppBundle\Entity\MeetingReport }

    app.repository.project_role:
        class: AppBundle\Repository\ProjectRoleRepository
        arguments: ~
        tags:
            - { name: app.repository, class: AppBundle\Entity\ProjectRole }

    app.repository.project_status:
        class: AppBundle\Repository\ProjectStatusRepository
        arguments: ~
        tags:
            - { name: app.repository, class: AppBundle\Entity\ProjectStatus }

    app.repository.project_department_member:
        class: AppBundle\Repository\ProjectDepartmentMember
        arguments: ~
        tags:
            - { name: app.repository, class: AppBundle\Entity\ProjectDepartmentMember }
