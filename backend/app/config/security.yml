security:
    encoders:
        AppBundle\Entity\User:
            algorithm: bcrypt
    providers:
        api_provider:
            id: app_api.authentication.handler.user_provider
        our_db_provider:
            entity:
                class: AppBundle:User
                property: email
    access_decision_manager:
        strategy: affirmative
    firewalls:
        login:
            pattern: ^/api/login
            stateless: true
            anonymous: true
            form_login:
                check_path: /api/login
                username_parameter: email
                password_parameter: password
                success_handler: app_api.authentication.handler.success
                failure_handler: app_api.authentication.handler.failure
                require_previous_session: false

        api:
            pattern: ^/api
            stateless: true
            anonymous: true
            simple_preauth:
                authenticator: app_api.authentication.handler.authenticator
            provider: api_provider

        main:
            anonymous: ~
            pattern: ^/
            form_login:
                username_parameter: "email"
                password_parameter: "password"
                login_path: main_login
                check_path: main_login
            logout:
                path: main_logout
                target: main_homepage
            provider: our_db_provider
            switch_user: { role: ROLE_ALLOWED_TO_SWITCH }
            host: '^%domain%$'
        app:
            anonymous: ~
            pattern: ^/
            form_login:
                username_parameter: "email"
                password_parameter: "password"
                login_path: main_login
                check_path: main_login
            logout:
                path: main_logout
                target: main_homepage
            provider: our_db_provider
            switch_user: { role: ROLE_ALLOWED_TO_SWITCH }
            host: '^[^\.]+.%domain%$'
    role_hierarchy:
        ROLE_ADMIN:
            - ROLE_USER
        ROLE_SUPER_ADMIN:
            - ROLE_ADMIN
    access_control:
        # app specific
        - { path: ^/login, host: '^[^\.]+.%domain%$', roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, host: '^[^\.]+.%domain%$', roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/_profiler, host: '^[^\.]+.%domain%$', roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # general
        - { path: ^/api/teams/[^/]+/enabled, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ['ROLE_ADMIN', 'ROLE_SUPER_ADMIN'] }
        - { path: ^/team/invitation-accepted, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/team, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/payment, roles: IS_AUTHENTICATED_FULLY }
