security:
    encoders:
        AppBundle\Entity\User:
            algorithm: bcrypt
    providers:
        our_db_provider:
            entity:
                class: AppBundle:User
                property: email

    firewalls:
        login:
            pattern: ^/api/login
            stateless: true
            anonymous: true
            form_login:
                check_path: /api/login-check
                username_parameter: email
                password_parameter: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false
        api:
            pattern: ^/api
            stateless: true
            anonymous: true
            lexik_jwt:
                authorization_header: # check token in Authorization Header
                    enabled: true
                    prefix: Bearer
                    name: Authorization
                cookie:               # check token in a cookie
                    enabled: false
                    name: BEARER
                query_parameter:      # check token in query string parameter
                    enabled: false
                    name: bearer
                throw_exceptions: false     # When an authentication failure occurs, return a 401 response immediately
                create_entry_point: true      # When no authentication details are provided, create a default entry point that returns a 401 response
                authentication_provider: lexik_jwt_authentication.security.authentication.provider
                authentication_listener: lexik_jwt_authentication.security.authentication.listener
        main:
            anonymous: ~
            pattern: ^/
            form_login:
                username_parameter: "email"
                password_parameter: "password"
                login_path: main_login
                check_path: main_login
            logout:
                path: main_logout
                target: main_homepage
            provider: our_db_provider
            switch_user: { role: ROLE_SUPER_ADMIN }
    role_hierarchy:
        ROLE_ADMIN:
            - ROLE_USER
        ROLE_SUPER_ADMIN:
            - ROLE_ADMIN
    access_control:
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ['ROLE_ADMIN', 'ROLE_SUPER_ADMIN'] }
