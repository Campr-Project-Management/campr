stages:
  - test

phpunit:
  stage: test
  script:
    - echo "Running phpunit tests"
    - export SYMFONY_ENV=test
    - export SYMFONY__DATABASE_NAME=campr_runner_$CI_RUNNER_ID
    - export SYMFONY__DATABASE_PASSWORD=campr
    - rm -rf var/cache/*
    - wget https://getcomposer.org/composer.phar
    - php composer.phar install --quiet --prefer-dist --no-interaction
    - cp phpunit.xml.dist phpunit.xml
    - rm -rf web/uploads/tests
    - mkdir -p backend/src/AppBundle/Tests/Resources/files/ && touch backend/src/AppBundle/Tests/Resources/files/file.txt
    - bin/console doctrine:database:drop --if-exists --force --env=test
    - bin/console doctrine:database:create --env=test
    - bin/console doctrine:migrations:migrate --no-interaction --env=test
    - bin/console doctrine:schema:validate --env=test
    - bin/console doctrine:fixtures:load --append --fixtures=backend/src/AppBundle/DataFixtures/ORM/ --no-interaction --env=test
    - bin/console cache:clear --env=test
    - backend/vendor/bin/phpunit -c . backend/src
    - rm -rf backend/src/AppBundle/Tests/Resources/files/
    - bin/console doctrine:database:drop --if-exists --force --env=test

phpstan:
  stage: test
  script:
  - echo "Checking PHP files with phpstan"
  - bin/phpstan analyse -l 1 backend/src

cs-fixer:
  stage: test
  script:
  - echo "Checking PHP files with php-cs-fixer"
  - bin/php-cs-fixer fix --rules=@Symfony -v --dry-run --stop-on-violation --using-cache=false backend/src
  - bin/php-cs-fixer fix --rules=@Symfony -v --dry-run --stop-on-violation --using-cache=false deploy.php

deploy_qa:
  stage: deploy
  script:
    - sudo bin/dep deploy qa-local -vvv
  environment:
    name: qa/develop
    url: https://qa.campr.biz
  when: manual
  #only:
  #  - branches
  #except:
  #  - master
