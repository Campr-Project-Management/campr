#!/bin/bash

# Redirect output to stderr.
exec 1>&2

noErrors="Unable to make commits without checking the code for errors!"

# check that cs fixer is installed, otherwise deny commits
if [ ! -e backend/vendor/fabpot/php-cs-fixer/php-cs-fixer ]
then
    echo $noErrors
    echo "php-cs-fixer must be installed in backend/vendor/fabpot/php-cs-fixer/php-cs-fixer"
    echo "in order to install it, run \"composer install --dev\""
    exit 1
fi

# run lint:twig
twigFilesWithError=()
twigModifiedFiles=`git status | grep ".twig$" | grep -v 'renamed: ' | grep -v 'deleted: ' | cut -d" " -f4`
twigRenamedFiles=`git status | grep ".twig$" | grep 'renamed: ' | cut -d" " -f7`
twigFiles=`echo $twigModifiedFiles $twigRenamedFiles |tr " " "\n" | sort -u`

if [ ${#twigFiles[@]} != 0 ]; then echo "Checking twig files for standards:"; fi
for file in $twigFiles;
do
    bin/console lint:twig $file > /dev/null 2>&1;
    if [ $? != 0 ]
    then
        echo -e "\033[0;31m\t$file\033[0m"
        twigFilesWithError+=($file)
    else
        echo -e "\033[0;32m\t$file\033[0m"
    fi
done

if [ ${#twigFilesWithError[@]} != 0 ]
then
    echo -e "\033[0;31mPlease fix the twig syntax errors from the files marked with red.\033[0m"
fi

# run lint:yml
ymlFilesWithError=()
ymlModifiedFiles=`git status | grep ".yml$" | grep -v 'renamed: ' | grep -v 'deleted: ' | cut -d" " -f4`
ymlRenamedFiles=`git status | grep ".yml$" | grep 'renamed: ' | cut -d" " -f7`
ymlFiles=`echo $ymlModifiedFiles $ymlRenamedFiles |tr " " "\n" | sort -u`

if [ ${#ymlFiles[@]} != 0 ]; then echo "Checking yml files for standards:"; fi
for file in $ymlFiles;
do
    bin/console lint:yaml $file > /dev/null 2>&1;
    if [ $? != 0 ]
    then
        echo -e "\033[0;31m\t$file\033[0m"
        ymlFilesWithError+=($file)
    else
        echo -e "\033[0;32m\t$file\033[0m"
    fi
done

if [ ${#ymlFilesWithError[@]} != 0 ]
then
    echo -e "\033[0;31mPlease fix the yml syntax errors from the files marked with red.\033[0m"
fi

# run php-cs-fixer test
phpFilesWithError=()
phpModifiedFiles=`git status | grep ".php$" | grep -v 'renamed: ' | grep -v 'deleted: ' | cut -d" " -f4`
phpRenamedFiles=`git status | grep ".php$" | grep 'renamed: ' | cut -d" " -f7`
phpFiles=`echo $phpModifiedFiles $phpRenamedFiles |tr " " "\n" | sort -u`

if [ ! -z "$phpFiles" ]; then echo -e "Checking PHP coding standards:"; fi

for file in $phpFiles;
do
    backend/vendor/fabpot/php-cs-fixer/php-cs-fixer fix -vvv --level=symfony --dry-run $file > /dev/null 2>&1;
    if [ $? != 0 ]
    then
        echo -e "\033[0;31m\t$file\033[0m"
        phpFilesWithError+=($file)
    else
        echo -e "\033[0;32m\t$file\033[0m"
    fi
done

if [ ${#phpFilesWithError[@]} != 0 ]
then
    echo -e "\n\033[0;31mThere are coding standard errors!"
    echo "Please fix them in order to be able to make commits!\n"
    echo -e "\033[0mTo fix all the files automatically, you can run the following command:"
    echo -e "\033[0;37m\tgit status -s | grep \"\.php$\" | cut -d\" \" -f3 | xargs -L1 php-cs-fixer fix --level=symfony -vvv\033[0m"
    exit 1
fi

if [ ${#jsFilesWithError[@]} != 0 ] || [ ${#twigFilesWithError[@]} != 0 ] || [ ${#ymlFilesWithError[@]} != 0 ]
then
    exit 1
fi
